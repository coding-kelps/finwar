//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.16

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "orderbook")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub bot_id: i32,
    pub symbol: String,
    pub order_type: String,
    pub quantity: i32,
    #[sea_orm(column_type = "Double")]
    pub price: f64,
    pub status: String,
    pub created_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::bot::Entity",
        from = "Column::BotId",
        to = "super::bot::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Bot,
}

impl Related<super::bot::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Bot.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
